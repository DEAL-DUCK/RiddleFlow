"""create contest_user_associations table

Revision ID: cdb31c1ff421
Revises: dd1b772ec87d
Create Date: 2025-05-01 12:08:27.131356

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "cdb31c1ff421"
down_revision: Union[str, None] = "dd1b772ec87d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "contest_user_association",
        sa.Column("contest_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "user_status",
            sa.Enum(
                "REGISTERED",
                "COMPLETED",
                "DISQUALIFIED",
                "REFUSED",
                name="participation_status",
            ),
            server_default="REGISTERED",
            nullable=False,
        ),
        sa.Column(
            "registration_date",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("tasks_completed", sa.Integer(), nullable=False),
        sa.Column("points_earned", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["contest_id"],
            ["contests.id"],
            name=op.f("fk_contest_user_association_contest_id_contests"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_contest_user_association_user_id_users"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_contest_user_association")),
        sa.UniqueConstraint("contest_id", "user_id", name="idx_unique_contest_user"),
    )
    op.create_index(
        "idx_contest_user_user_id",
        "contest_user_association",
        ["user_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("idx_contest_user_user_id", table_name="contest_user_association")
    op.drop_table("contest_user_association")
    # ### end Alembic commands ###
