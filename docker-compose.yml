services:
  pg:
    image: postgres
    environment:
      POSTGRES_DB: RiddleFlowDB
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis_cache:
    image: redis:latest
    ports:
      - "6378:6379"
    volumes:
      - redis_cache_data:/data
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis_celery:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_celery_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  celery_worker:
    build:
      context: ./services/backend
    env_file:
      - ./services/backend/src/.env.docker
    command: ["sh", "-c", "sleep 5 && celery -A tasks.celery_app worker --loglevel=info"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      pg:
        condition: service_healthy
      redis_celery:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://user:password@pg:5432/RiddleFlowDB
      - REDIS_CELERY_URL=redis://redis_celery:6379/0

  celery_beat:
    build:
      context: ./services/backend
    env_file:
      - ./services/backend/src/.env.docker
    command: ["sh", "-c", "sleep 5 && celery -A tasks.celery_app beat --loglevel=info"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      pg:
        condition: service_healthy
      redis_celery:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://user:password@pg:5432/RiddleFlowDB
      - REDIS_CELERY_URL=redis://redis_celery:6379/0


  backend:
    build: ./services/backend
    env_file:
      - ./services/backend/src/.env.docker
    ports:
      - 5000:5000
    volumes:
      - ./services/backend:/app
      - /var/run/docker.sock:/var/run/docker.sock  # Монтируем сокет Docker
    depends_on:
      pg:
        condition: service_healthy
      redis_cache:
        condition: service_healthy
      redis_celery:
        condition: service_healthy
    command: >
      bash -c "uvicorn main:app --reload --host 0.0.0.0 --port 5000 && alembic upgrade head"
    privileged: true


  flower:
    build:
      context: ./services/backend
    env_file:
      - ./services/backend/src/.env.docker
    command: ["celery", "-A", "tasks.celery_app", "flower", "--broker=redis://redis_celery:6379/0"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "5555:5555"
    depends_on:
      redis_celery:
        condition: service_healthy

  frontend:
    build: ./services/frontend
    volumes:
      - './services/frontend:/app'
      - '/app/node_modules'
    ports:
      - 8080:8080


volumes:
  postgres_data:
  redis_cache_data:
  redis_celery_data: